##
## -----------------------
## | N A S - D O C K E R |
## -----------------------
##
## Container based media tools configuration
##
## -- DO NOT EDIT THIS FILE --
##
## Configuration items for this file are taken from the .env file
##
## Have docker-compose.yml and .env in the same directory to launch the stack

version: '3'

######################
# SERVICES TO LAUNCH #
######################

services:
  # ----------------------------------------
  # ORGANIZR
  # Web Frontend for Management
  # ----------------------------------------
  organizr:
    image: organizr/organizr
    container_name: organizr
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${ORGANIZR_PORT}:80'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '${SYNOLOGY_BASE_DOCKER_PATH}/organizr:/config'
      - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # DELUGEVPN
  # Deluge Torrent Client + VPN
  # ----------------------------------------
  arch-delugevpn:
    image: binhex/arch-delugevpn
    container_name: delugevpn
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${DELUGE_PORT}:8112'
      - '8118:8118'
      - '58846:58846'
      - '58946:58946'
    cap_add:
      - NET_ADMIN
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - VPN_ENABLED=yes
      - VPN_USER=${VPNUNAME}
      - VPN_PASS=${VPNPASS}
      - VPN_REMOTE=${VPN_REMOTE}
      - VPN_PORT=1198
      - VPN_PROTOCOL=udp
      - VPN_DEVICE_TYPE=tun
      - VPN_PROV=${VPNPROVIDER}
      - STRONG_CERTS=no
      - ENABLE_PRIVOXY=yes
      - STRICT_PORT_FORWARD=yes
      - LAN_NETWORK=${CIDR_ADDRESS}
      - NAME_SERVERS=37.235.1.174,8.8.8.8,37.235.1.177,8.8.4.4
      - DEBUG=false
    volumes:
      - '${TORRENTS_PATH}:/data'
      - '${SYNOLOGY_BASE_DOCKER_PATH}/delugevpn/config:/config'
      - '${SYNOLOGY_BASE_DOCKER_PATH}/ovpn/${VPNPROVIDER}:/config/openvpn'
      - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # SONARR
  # TV Series Management
  # ----------------------------------------
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${SONARR_PORT}:8989'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '${SYNOLOGY_BASE_DOCKER_PATH}/sonarr:/config'
      - '${TORRENTS_PATH}/Completed:/data/Completed'
      - '${MEDIA_BASE_PATH}/TVShows:/tv'
      - '${MEDIA_BASE_PATH}/Kid TV:/kidtv'
      - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # RADARR
  # Movie Management
  # ----------------------------------------
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${RADARR_PORT}:7878'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '${SYNOLOGY_BASE_DOCKER_PATH}/radarr:/config'
      - '${TORRENTS_PATH}/Completed:/data/Completed'
      - '${MEDIA_BASE_PATH}/Movies:/movies'
      - '${MEDIA_BASE_PATH}/Kid Movies:/kidmovies'
      - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # RADARR 4K
  # Movie Management
  # ----------------------------------------
  radarr4k:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr4k
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${RADARR_4K_PORT}:7878'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '${SYNOLOGY_BASE_DOCKER_PATH}/radarr4k:/config'
      - '${TORRENTS_PATH}/Completed:/data/Completed'
      - '${MEDIA_BASE_PATH}/Movies4k:/movies4k'
      - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # CALIBRE
  # Book Interface
  # ----------------------------------------
  calibre:
    image: lscr.io/linuxserver/calibre:latest
    container_name: calibre
    security_opt:
      - seccomp:unconfined #optional
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${CALIBRE_PORT}:8080'
      - '${CALIBRE_SERVER_PORT}:8181'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - PASSWORD=${CALIBRE_AUTH}
    volumes:
      - '${SYNOLOGY_BASE_DOCKER_PATH}/calibre:/config'
      - '${TORRENTS_PATH}/Completed:/data/Completed'
      - '${MEDIA_BASE_PATH}/Books:/books'
      - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # READARR
  # Bool Management
  # ----------------------------------------
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${READARR_PORT}:8787'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '${SYNOLOGY_BASE_DOCKER_PATH}/readarr:/config'
      - '${TORRENTS_PATH}/Completed:/data/Completed'
      - '${MEDIA_BASE_PATH}/Books:/books'
      - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # JACKETT
  # RSS/TORZNAB Feed Creator
  # ----------------------------------------
  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${JACKETT_PORT}:9117'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '${SYNOLOGY_BASE_DOCKER_PATH}/jackett:/config'
      - '${TORRENTS_PATH}/Completed:/downloads'
      - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # TAUTULLI
  # Monitoring Service for PLEX Usage
  # ----------------------------------------
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${TAUTULLI_PORT}:8181'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '${SYNOLOGY_BASE_DOCKER_PATH}/tautulli:/config'
      - '${SYNOLOGY_PLEX_PATH}/AppData/Plex Media Server/Logs:/logs:ro'
      - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # Overseerr
  # Request Service for Plex Content
  # ----------------------------------------
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    ports:
      - '${OVERSEERR_PORT}:5055'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - LOG_LEVEL=info
    volumes:
      - '${SYNOLOGY_BASE_DOCKER_PATH}/overseerr:/app/config'
      - '/etc/localtime:/etc/localtime:ro'
